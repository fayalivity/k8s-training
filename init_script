# Install master node V1.28.0
swapoff -a
vi /etc/fstab
reboot
# comment swap line with #
modprobe overlay
modprobe br_netfilter

cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
overlay
br_netfilter
EOF

cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward                = 1
net.bridge.bridge-nf-call-ip6tables= 1
EOF

apt-get update
apt-get install -y containerd
mkdir -p /etc/containerd
containerd config default | tee /etc/containerd/config.toml

vi /etc/containerd/config.toml
# search with /SystemdCgroup and set parameter to true

systemctl restart containerd

curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
apt update
apt-cache policy kubelet | head -n 20
apt install -y kubelet kubeadm kubectl
apt-mark hold kubelet kubeadm kubectl containerd

sudo systemctl enable kubelet.service
sudo systemctl enable containerd.service

# Depuis le master
kubeadm init

# Récupérer la commande kubeadm join en sortie de kubeadm init puis lancez la sur le node
kubeadm join .....

# Depuis le master, lancez les commandes suivantes
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
# Creating cluster
wget https://docs.projectcalico.org/manifests/calico.yaml
